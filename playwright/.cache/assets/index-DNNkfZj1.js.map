{"version":3,"file":"index-DNNkfZj1.js","sources":["../../../node_modules/turbo-stream/dist/turbo-stream.mjs","../../../node_modules/cookie/dist/index.js","../../../node_modules/set-cookie-parser/lib/set-cookie.js","../../../node_modules/react-router/dist/development/chunk-BAXFHI7N.mjs","../../../node_modules/react-router/dist/development/dom-export.mjs","../../../node_modules/react-router/dist/development/index.mjs","../../../node_modules/react-router-dom/dist/index.mjs"],"sourcesContent":["// src/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred = class {\n  promise;\n  resolve;\n  reject;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// src/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing)\n    return [existing];\n  if (input === void 0)\n    return UNDEFINED;\n  if (input === null)\n    return NULL;\n  if (Number.isNaN(input))\n    return NAN;\n  if (input === Number.POSITIVE_INFINITY)\n    return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY)\n    return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0)\n    return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            str[index2] = `[\"${TYPE_DATE}\",${input2.getTime()}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// src/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\")\n    return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length)\n    throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = 1; i < value.length; i++)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = 1; i < value.length; i += 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// src/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value)\n      continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      while (Object.keys(encoder.deferred).length > 0) {\n        for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n          if (seenPromises.has(deferred))\n            continue;\n          seenPromises.add(\n            encoder.deferred[Number(deferredId)] = raceSignal(\n              deferred,\n              encoder.signal\n            ).then(\n              (resolved) => {\n                const id2 = flatten.call(encoder, resolved);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                  encoder.index++;\n                  lastSentIndex++;\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              },\n              (reason) => {\n                if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                  reason = new Error(\"An unknown error occurred\");\n                }\n                const id2 = flatten.call(encoder, reason);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                  encoder.index++;\n                  lastSentIndex++;\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              }\n            ).finally(() => {\n              delete encoder.deferred[Number(deferredId)];\n            })\n          );\n        }\n        await Promise.race(Object.values(encoder.deferred));\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\nfunction raceSignal(promise, signal) {\n  if (!signal)\n    return promise;\n  if (signal.aborted)\n    return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  const abort = new Promise((resolve, reject) => {\n    signal.addEventListener(\"abort\", (event) => {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(() => {\n  });\n  return Promise.race([abort, promise]);\n}\nexport {\n  decode,\n  encode\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */ (() => {\n    const C = function () { };\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nfunction parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2)\n        return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1)\n            break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = startIndex(str, index, eqIdx);\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    } while (index < len);\n    return obj;\n}\nfunction startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index;\n    } while (++index < max);\n    return max;\n}\nfunction endIndex(str, index, min) {\n    while (index > min) {\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nfunction serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options)\n        return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) {\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        }\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!domainValueRegExp.test(options.domain)) {\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\n        }\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!pathValueRegExp.test(options.path)) {\n            throw new TypeError(`option path is invalid: ${options.path}`);\n        }\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!isDate(options.expires) ||\n            !Number.isFinite(options.expires.valueOf())) {\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\n        }\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n        str += \"; Secure\";\n    }\n    if (options.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\"\n            ? options.priority.toLowerCase()\n            : undefined;\n        switch (priority) {\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\"\n            ? options.sameSite.toLowerCase()\n            : options.sameSite;\n        switch (sameSite) {\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str) {\n    if (str.indexOf(\"%\") === -1)\n        return str;\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else if (key === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n","/**\n * react-router v7.5.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href2 = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href2 = typeof to === \"string\" ? to : createPath(to);\n    href2 = href2.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href2}`\n    );\n    return new URL(href2, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return stringify(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  );\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    let fogOfWar = checkFogOfWar(\n      null,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active && fogOfWar.matches) {\n      initialMatchesIsFOW = true;\n      initialMatches = fogOfWar.matches;\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    initialized = true;\n  } else {\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors[m.route.id] !== void 0\n      );\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href2, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href2,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_respond: respond\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return respond ? respond(staticContext) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return respond ? respond(staticContext) : staticContext;\n    }\n    if (respond && matches.some(\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\n    )) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          true,\n          async () => {\n            let result2 = await queryImpl(\n              request,\n              location,\n              matches,\n              requestContext,\n              dataStrategy || null,\n              skipLoaderErrorBubbling === true,\n              null,\n              filterMatchesToLoad || null,\n              skipRevalidation === true\n            );\n            if (isResponse(result2)) {\n              return result2;\n            }\n            renderedStaticContext = { location, basename, ...result2 };\n            let res = await respond(renderedStaticContext);\n            return res;\n          },\n          async (error, routeId) => {\n            if (isResponse(error)) {\n              return error;\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              return respond(\n                getStaticContextFromError(\n                  dataRoutes,\n                  renderedStaticContext,\n                  error,\n                  findNearestBoundary(matches, routeId).route.id\n                )\n              );\n            } else {\n              let loaderIdx = matches.findIndex((m) => m.route.loader);\n              let boundary = loaderIdx >= 0 ? findNearestBoundary(matches, matches[loaderIdx].route.id) : findNearestBoundary(matches);\n              return respond({\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundary.route.id]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              });\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_respond: respond\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (respond && matches.some(\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\n    )) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        true,\n        async () => {\n          let result2 = await queryImpl(\n            request,\n            location,\n            matches,\n            requestContext,\n            dataStrategy || null,\n            false,\n            match,\n            null,\n            false\n          );\n          if (isResponse(result2)) {\n            return respond(result2);\n          }\n          let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;\n          if (error2 !== void 0) {\n            throw error2;\n          }\n          let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];\n          return typeof value === \"string\" ? new Response(value) : Response.json(value);\n        },\n        (error2) => {\n          if (isResponse(error2)) {\n            return respond(error2);\n          }\n          return new Response(String(error2), {\n            status: 500,\n            statusText: \"Unexpected Server Error\"\n          });\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\n    if (error !== void 0) {\n      throw error;\n    }\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      return Object.values(result.loaderData)[0];\n    }\n    return void 0;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          throw result;\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(\n    (newRoute) => !childrenToPatch.some(\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\n    )\n  );\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties2,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runMiddlewarePipeline(\n    args,\n    false,\n    () => defaultDataStrategy(args),\n    (error, routeId) => ({ [routeId]: { type: \"error\", result: error } })\n  );\n}\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let middlewareState = {\n    handlerResult: void 0\n  };\n  try {\n    let tuples = matches.flatMap(\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n    );\n    let result = await callRouteMiddleware(\n      { request, params, context },\n      tuples,\n      propagateResult,\n      middlewareState,\n      handler\n    );\n    return propagateResult ? result : middlewareState.handlerResult;\n  } catch (e) {\n    if (!middlewareState.middlewareError) {\n      throw e;\n    }\n    let result = await errorHandler(\n      middlewareState.middlewareError.error,\n      middlewareState.middlewareError.routeId\n    );\n    if (propagateResult || !middlewareState.handlerResult) {\n      return result;\n    }\n    return Object.assign(middlewareState.handlerResult, result);\n  }\n}\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    middlewareState.handlerResult = await handler();\n    return middlewareState.handlerResult;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    let result = await callRouteMiddleware(\n      args,\n      middlewares,\n      propagateResult,\n      middlewareState,\n      handler,\n      idx + 1\n    );\n    if (propagateResult) {\n      nextResult = result;\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (nextCalled) {\n      if (result === void 0) {\n        return nextResult;\n      } else {\n        return result;\n      }\n    } else {\n      return next();\n    }\n  } catch (error) {\n    if (!middlewareState.middlewareError) {\n      middlewareState.middlewareError = { routeId, error };\n    } else if (middlewareState.middlewareError.error !== error) {\n      middlewareState.middlewareError = { routeId, error };\n    }\n    throw error;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runMiddlewarePipeline(\n      typedDataStrategyArgs,\n      false,\n      () => cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n          );\n        }\n      }),\n      (error, routeId) => ({\n        [routeId]: { type: \"error\", result: error }\n      })\n    );\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [m._lazyPromises?.handler, m._lazyPromises?.route])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nvar ENABLE_DEV_WARNINGS = true;\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator2.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator2.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator2.replace : navigator2.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator2,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */ React2.createElement(\n        RenderedRoute,\n        {\n          match,\n          routeContext: {\n            outlet,\n            matches: matches2,\n            isDataRoute: dataRouterState != null\n          },\n          children\n        }\n      );\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n      RenderErrorBoundary,\n      {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error,\n        children: getChildren(),\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n      }\n    ) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  return React2.useMemo(\n    () => ({\n      async revalidate() {\n        await dataRouterContext.router.revalidate();\n      },\n      state: state.revalidation\n    }),\n    [dataRouterContext.router, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nvar ENABLE_DEV_WARNINGS2 = true;\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS2) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator2 = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator: navigator2,\n      static: false,\n      basename\n    }),\n    [router, navigator2, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator2\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(_props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator: navigator2,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator: navigator2,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator2, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/components.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\nimport { decode } from \"turbo-stream\";\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename);\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global2) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global2 && typeof global2[name] === \"function\") {\n            Constructor = global2[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React5 from \"react\";\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React5.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React5.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React5.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nimport * as React6 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ));\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(ssr) {\n  return ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router]);\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\n    /\\/+/g,\n    \"/\"\n  );\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      throw new Error(\"Detected manifest version mismatch, reloading...\");\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React9.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React9.useRef(null);\n  React9.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React9.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nfunction Links() {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React9.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React9.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React9.createElement(\"link\", { rel: \"stylesheet\", href: criticalCss.href }) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  ));\n}\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let { router } = useDataRouterContext2();\n  let matches = React9.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\n  React9.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React9.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename);\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React9.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React9.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React9.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React9.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React9.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/lib.tsx\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = \"7.5.2\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href2 = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href2,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href2 })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator: navigator2, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href2, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href2, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, opts = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        unstable_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href2 = typeof to === \"string\" ? to : createPath(to);\n  href2 = href2.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\n// lib/dom/ssr/server.tsx\nimport * as React12 from \"react\";\nfunction ServerRouter({\n  context,\n  url,\n  nonce\n}) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  }\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\n  let routes = createServerRoutes(\n    manifest.routes,\n    routeModules,\n    context.future,\n    context.isSpaMode\n  );\n  context.staticHandlerContext.loaderData = {\n    ...context.staticHandlerContext.loaderData\n  };\n  for (let match of context.staticHandlerContext.matches) {\n    let routeId = match.route.id;\n    let route = routeModules[routeId];\n    let manifestRoute = context.manifest.routes[routeId];\n    if (route && manifestRoute && shouldHydrateRouteLoader(\n      routeId,\n      route.clientLoader,\n      manifestRoute.hasLoader,\n      context.isSpaMode\n    ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n      delete context.staticHandlerContext.loaderData[routeId];\n    }\n  }\n  let router = createStaticRouter(routes, context.staticHandlerContext);\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\n    FrameworkContext.Provider,\n    {\n      value: {\n        manifest,\n        routeModules,\n        criticalCss,\n        serverHandoffString,\n        future: context.future,\n        ssr: context.ssr,\n        isSpaMode: context.isSpaMode,\n        serializeError: context.serializeError,\n        renderMeta: context.renderMeta\n      }\n    },\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\n      StaticRouterProvider,\n      {\n        router,\n        context: context.staticHandlerContext,\n        hydrate: false\n      }\n    ))\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\n    StreamTransfer,\n    {\n      context,\n      identifier: 0,\n      reader: context.serverHandoffStream.getReader(),\n      textDecoder: new TextDecoder(),\n      nonce\n    }\n  )) : null);\n}\n\n// lib/dom/ssr/routes-test-stub.tsx\nimport * as React13 from \"react\";\nfunction createRoutesStub(routes, unstable_getContext) {\n  return function RoutesTestStub({\n    initialEntries,\n    initialIndex,\n    hydrationData,\n    future\n  }) {\n    let routerRef = React13.useRef();\n    let remixContextRef = React13.useRef();\n    if (routerRef.current == null) {\n      remixContextRef.current = {\n        future: {\n          unstable_subResourceIntegrity: future?.unstable_subResourceIntegrity === true,\n          unstable_middleware: future?.unstable_middleware === true\n        },\n        manifest: {\n          routes: {},\n          entry: { imports: [], module: \"\" },\n          url: \"\",\n          version: \"\"\n        },\n        routeModules: {},\n        ssr: false,\n        isSpaMode: false\n      };\n      let patched = processRoutes(\n        // @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`\n        // types compared to `AgnosticRouteObject`\n        convertRoutesToDataRoutes(routes, (r) => r),\n        remixContextRef.current.manifest,\n        remixContextRef.current.routeModules\n      );\n      routerRef.current = createMemoryRouter(patched, {\n        unstable_getContext,\n        initialEntries,\n        initialIndex,\n        hydrationData\n      });\n    }\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\n  };\n}\nfunction processRoutes(routes, manifest, routeModules, parentId) {\n  return routes.map((route) => {\n    if (!route.id) {\n      throw new Error(\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\n      );\n    }\n    let newRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      Component: route.Component,\n      HydrateFallback: route.HydrateFallback,\n      ErrorBoundary: route.ErrorBoundary,\n      action: route.action,\n      loader: route.loader,\n      handle: route.handle,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    let entryRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      parentId,\n      hasAction: route.action != null,\n      hasLoader: route.loader != null,\n      // When testing routes, you should be stubbing loader/action/middleware,\n      // not trying to re-implement the full loader/clientLoader/SSR/hydration\n      // flow. That is better tested via E2E tests.\n      hasClientAction: false,\n      hasClientLoader: false,\n      hasClientMiddleware: false,\n      hasErrorBoundary: route.ErrorBoundary != null,\n      // any need for these?\n      module: \"build/stub-path-to-module.js\",\n      clientActionModule: void 0,\n      clientLoaderModule: void 0,\n      clientMiddlewareModule: void 0,\n      hydrateFallbackModule: void 0\n    };\n    manifest.routes[newRoute.id] = entryRoute;\n    routeModules[route.id] = {\n      default: route.Component || Outlet,\n      ErrorBoundary: route.ErrorBoundary || void 0,\n      handle: route.handle,\n      links: route.links,\n      meta: route.meta,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    if (route.children) {\n      newRoute.children = processRoutes(\n        route.children,\n        manifest,\n        routeModules,\n        newRoute.id\n      );\n    }\n    return newRoute;\n  });\n}\n\n// lib/server-runtime/cookies.ts\nimport { parse, serialize } from \"cookie\";\n\n// lib/server-runtime/crypto.ts\nvar encoder = new TextEncoder();\nvar sign = async (value, secret) => {\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"sign\"]);\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\n    /=+$/,\n    \"\"\n  );\n  return value + \".\" + hash;\n};\nvar unsign = async (cookie, secret) => {\n  let index = cookie.lastIndexOf(\".\");\n  let value = cookie.slice(0, index);\n  let hash = cookie.slice(index + 1);\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"verify\"]);\n  let signature = byteStringToUint8Array(atob(hash));\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\n  return valid ? value : false;\n};\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\n  \"raw\",\n  encoder.encode(secret),\n  { name: \"HMAC\", hash: \"SHA-256\" },\n  false,\n  usages\n);\nfunction byteStringToUint8Array(byteString) {\n  let array = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    array[i] = byteString.charCodeAt(i);\n  }\n  return array;\n}\n\n// lib/server-runtime/cookies.ts\nvar createCookie = (name, cookieOptions = {}) => {\n  let { secrets = [], ...options } = {\n    path: \"/\",\n    sameSite: \"lax\",\n    ...cookieOptions\n  };\n  warnOnceAboutExpiresCookie(name, options.expires);\n  return {\n    get name() {\n      return name;\n    },\n    get isSigned() {\n      return secrets.length > 0;\n    },\n    get expires() {\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\n    },\n    async parse(cookieHeader, parseOptions) {\n      if (!cookieHeader) return null;\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\n      if (name in cookies) {\n        let value = cookies[name];\n        if (typeof value === \"string\" && value !== \"\") {\n          let decoded = await decodeCookieValue(value, secrets);\n          return decoded;\n        } else {\n          return \"\";\n        }\n      } else {\n        return null;\n      }\n    },\n    async serialize(value, serializeOptions) {\n      return serialize(\n        name,\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\n        {\n          ...options,\n          ...serializeOptions\n        }\n      );\n    }\n  };\n};\nvar isCookie = (object) => {\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\n};\nasync function encodeCookieValue(value, secrets) {\n  let encoded = encodeData(value);\n  if (secrets.length > 0) {\n    encoded = await sign(encoded, secrets[0]);\n  }\n  return encoded;\n}\nasync function decodeCookieValue(value, secrets) {\n  if (secrets.length > 0) {\n    for (let secret of secrets) {\n      let unsignedValue = await unsign(value, secret);\n      if (unsignedValue !== false) {\n        return decodeData(unsignedValue);\n      }\n    }\n    return null;\n  }\n  return decodeData(value);\n}\nfunction encodeData(value) {\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\n}\nfunction decodeData(value) {\n  try {\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\n  } catch (error) {\n    return {};\n  }\n}\nfunction myEscape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, code;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (/[\\w*+\\-./@]/.exec(chr)) {\n      result += chr;\n    } else {\n      code = chr.charCodeAt(0);\n      if (code < 256) {\n        result += \"%\" + hex(code, 2);\n      } else {\n        result += \"%u\" + hex(code, 4).toUpperCase();\n      }\n    }\n  }\n  return result;\n}\nfunction hex(code, length) {\n  let result = code.toString(16);\n  while (result.length < length) result = \"0\" + result;\n  return result;\n}\nfunction myUnescape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, part;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (chr === \"%\") {\n      if (str.charAt(index) === \"u\") {\n        part = str.slice(index + 1, index + 5);\n        if (/^[\\da-f]{4}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 5;\n          continue;\n        }\n      } else {\n        part = str.slice(index, index + 2);\n        if (/^[\\da-f]{2}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 2;\n          continue;\n        }\n      }\n    }\n    result += chr;\n  }\n  return result;\n}\nfunction warnOnceAboutExpiresCookie(name, expires) {\n  warnOnce(\n    !expires,\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\n  );\n}\n\n// lib/server-runtime/entry.ts\nfunction createEntryRouteModules(manifest) {\n  return Object.keys(manifest).reduce((memo2, routeId) => {\n    let route = manifest[routeId];\n    if (route) {\n      memo2[routeId] = route.module;\n    }\n    return memo2;\n  }, {});\n}\n\n// lib/server-runtime/mode.ts\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\n  ServerMode2[\"Development\"] = \"development\";\n  ServerMode2[\"Production\"] = \"production\";\n  ServerMode2[\"Test\"] = \"test\";\n  return ServerMode2;\n})(ServerMode || {});\nfunction isServerMode(value) {\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\n}\n\n// lib/server-runtime/errors.ts\nfunction sanitizeError(error, serverMode) {\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\n    let sanitized = new Error(\"Unexpected Server Error\");\n    sanitized.stack = void 0;\n    return sanitized;\n  }\n  return error;\n}\nfunction sanitizeErrors(errors, serverMode) {\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\n  }, {});\n}\nfunction serializeError(error, serverMode) {\n  let sanitized = sanitizeError(error, serverMode);\n  return {\n    message: sanitized.message,\n    stack: sanitized.stack\n  };\n}\nfunction serializeErrors2(errors, serverMode) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      let sanitized = sanitizeError(val, serverMode);\n      serialized[key] = {\n        message: sanitized.message,\n        stack: sanitized.stack,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.  This will only apply\n        // in dev mode since all production errors are sanitized to normal\n        // Error instances\n        ...sanitized.name !== \"Error\" ? {\n          __subType: sanitized.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/server-runtime/routeMatching.ts\nfunction matchServerRoutes(routes, pathname, basename) {\n  let matches = matchRoutes(\n    routes,\n    pathname,\n    basename\n  );\n  if (!matches) return null;\n  return matches.map((match) => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\n\n// lib/server-runtime/data.ts\nasync function callRouteHandler(handler, args) {\n  let result = await handler({\n    request: stripRoutesParam(stripIndexParam2(args.request)),\n    params: args.params,\n    context: args.context\n  });\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\n    throw new Response(null, result.init);\n  }\n  return result;\n}\nfunction stripIndexParam2(request) {\n  let url = new URL(request.url);\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\nfunction stripRoutesParam(request) {\n  let url = new URL(request.url);\n  url.searchParams.delete(\"_routes\");\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\n\n// lib/server-runtime/invariant.ts\nfunction invariant3(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    console.error(\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\n    );\n    throw new Error(message);\n  }\n}\n\n// lib/server-runtime/dev.ts\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\nfunction setDevServerHooks(devServerHooks) {\n  globalThis[globalDevServerHooksKey] = devServerHooks;\n}\nfunction getDevServerHooks() {\n  return globalThis[globalDevServerHooksKey];\n}\nfunction getBuildTimeHeader(request, headerName) {\n  if (typeof process !== \"undefined\") {\n    try {\n      if (process.env?.IS_RR_BUILD_REQUEST === \"yes\") {\n        return request.headers.get(headerName);\n      }\n    } catch (e) {\n    }\n  }\n  return null;\n}\n\n// lib/server-runtime/routes.ts\nfunction groupRoutesByParentId2(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => ({\n    ...route,\n    children: createRoutes(manifest, route.id, routesByParentId)\n  }));\n}\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let commonRoute = {\n      // Always include root due to default boundaries\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\n      id: route.id,\n      path: route.path,\n      unstable_middleware: route.module.unstable_middleware,\n      // Need to use RR's version in the param typed here to permit the optional\n      // context even though we know it'll always be provided in remix\n      loader: route.module.loader ? async (args) => {\n        let preRenderedData = getBuildTimeHeader(\n          args.request,\n          \"X-React-Router-Prerender-Data\"\n        );\n        if (preRenderedData != null) {\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\n          invariant3(encoded, \"Missing prerendered data for route\");\n          let uint8array = new TextEncoder().encode(encoded);\n          let stream = new ReadableStream({\n            start(controller) {\n              controller.enqueue(uint8array);\n              controller.close();\n            }\n          });\n          let decoded = await decodeViaTurboStream(stream, global);\n          let data2 = decoded.value;\n          if (data2 && SingleFetchRedirectSymbol in data2) {\n            let result = data2[SingleFetchRedirectSymbol];\n            let init = { status: result.status };\n            if (result.reload) {\n              throw redirectDocument(result.redirect, init);\n            } else if (result.replace) {\n              throw replace(result.redirect, init);\n            } else {\n              throw redirect(result.redirect, init);\n            }\n          } else {\n            invariant3(\n              data2 && route.id in data2,\n              \"Unable to decode prerendered data\"\n            );\n            let result = data2[route.id];\n            invariant3(\n              \"data\" in result,\n              \"Unable to process prerendered data\"\n            );\n            return result.data;\n          }\n        }\n        let val = await callRouteHandler(route.module.loader, args);\n        return val;\n      } : void 0,\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\n      handle: route.module.handle\n    };\n    return route.index ? {\n      index: true,\n      ...commonRoute\n    } : {\n      caseSensitive: route.caseSensitive,\n      children: createStaticHandlerDataRoutes(\n        manifest,\n        future,\n        route.id,\n        routesByParentId\n      ),\n      ...commonRoute\n    };\n  });\n}\n\n// lib/server-runtime/markup.ts\nvar ESCAPE_LOOKUP3 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml2(html) {\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\n}\n\n// lib/server-runtime/serverHandoff.ts\nfunction createServerHandoffString(serverHandoff) {\n  return escapeHtml2(JSON.stringify(serverHandoff));\n}\n\n// lib/server-runtime/single-fetch.ts\nimport { encode } from \"turbo-stream\";\n\n// lib/server-runtime/headers.ts\nimport { splitCookiesString } from \"set-cookie-parser\";\nfunction getDocumentHeaders(build, context) {\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\n  let errorHeaders;\n  if (boundaryIdx >= 0) {\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\n    context.matches.slice(boundaryIdx).some((match) => {\n      let id = match.route.id;\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\n        errorHeaders = actionHeaders[id];\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\n        errorHeaders = loaderHeaders[id];\n      }\n      return errorHeaders != null;\n    });\n  }\n  return matches.reduce((parentHeaders, match, idx) => {\n    let { id } = match.route;\n    let route = build.routes[id];\n    invariant3(route, `Route with id \"${id}\" not found in build`);\n    let routeModule = route.module;\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\n    let actionHeaders = context.actionHeaders[id] || new Headers();\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\n    if (routeModule.headers == null) {\n      let headers2 = new Headers(parentHeaders);\n      if (includeErrorCookies) {\n        prependCookies(errorHeaders, headers2);\n      }\n      prependCookies(actionHeaders, headers2);\n      prependCookies(loaderHeaders, headers2);\n      return headers2;\n    }\n    let headers = new Headers(\n      routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\n        loaderHeaders,\n        parentHeaders,\n        actionHeaders,\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\n      }) : routeModule.headers : void 0\n    );\n    if (includeErrorCookies) {\n      prependCookies(errorHeaders, headers);\n    }\n    prependCookies(actionHeaders, headers);\n    prependCookies(loaderHeaders, headers);\n    prependCookies(parentHeaders, headers);\n    return headers;\n  }, new Headers());\n}\nfunction prependCookies(parentHeaders, childHeaders) {\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\n  if (parentSetCookieString) {\n    let cookies = splitCookiesString(parentSetCookieString);\n    let childCookies = new Set(childHeaders.getSetCookie());\n    cookies.forEach((cookie) => {\n      if (!childCookies.has(cookie)) {\n        childHeaders.append(\"Set-Cookie\", cookie);\n      }\n    });\n  }\n}\n\n// lib/server-runtime/single-fetch.ts\nvar SERVER_NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([\n  ...NO_BODY_STATUS_CODES,\n  304\n]);\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let respond2 = function(context) {\n      let headers = getDocumentHeaders(build, context);\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n        return generateSingleFetchResponse(request, build, serverMode, {\n          result: getSingleFetchRedirect(\n            context.statusCode,\n            headers,\n            build.basename\n          ),\n          headers,\n          status: SINGLE_FETCH_REDIRECT_STATUS\n        });\n      }\n      if (context.errors) {\n        Object.values(context.errors).forEach((err) => {\n          if (!isRouteErrorResponse(err) || err.error) {\n            handleError(err);\n          }\n        });\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let singleFetchResult;\n      if (context.errors) {\n        singleFetchResult = { error: Object.values(context.errors)[0] };\n      } else {\n        singleFetchResult = {\n          data: Object.values(context.actionData || {})[0]\n        };\n      }\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: singleFetchResult,\n        headers,\n        status: context.statusCode\n      });\n    };\n    var respond = respond2;\n    let handlerRequest = new Request(handlerUrl, {\n      method: request.method,\n      body: request.body,\n      headers: request.headers,\n      signal: request.signal,\n      ...request.body ? { duplex: \"half\" } : void 0\n    });\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      skipRevalidation: true,\n      unstable_respond: respond2\n    });\n    if (!isResponse(result)) {\n      result = respond2(result);\n    }\n    if (isRedirectResponse(result)) {\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: getSingleFetchRedirect(\n          result.status,\n          result.headers,\n          build.basename\n        ),\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      });\n    }\n    return result;\n  } catch (error) {\n    handleError(error);\n    return generateSingleFetchResponse(request, build, serverMode, {\n      result: { error },\n      headers: new Headers(),\n      status: 500\n    });\n  }\n}\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let respond2 = function(context) {\n      let headers = getDocumentHeaders(build, context);\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n        return generateSingleFetchResponse(request, build, serverMode, {\n          result: {\n            [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n              context.statusCode,\n              headers,\n              build.basename\n            )\n          },\n          headers,\n          status: SINGLE_FETCH_REDIRECT_STATUS\n        });\n      }\n      if (context.errors) {\n        Object.values(context.errors).forEach((err) => {\n          if (!isRouteErrorResponse(err) || err.error) {\n            handleError(err);\n          }\n        });\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let results = {};\n      let loadedMatches = new Set(\n        context.matches.filter(\n          (m) => loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null\n        ).map((m) => m.route.id)\n      );\n      if (context.errors) {\n        for (let [id, error] of Object.entries(context.errors)) {\n          results[id] = { error };\n        }\n      }\n      for (let [id, data2] of Object.entries(context.loaderData)) {\n        if (!(id in results) && loadedMatches.has(id)) {\n          results[id] = { data: data2 };\n        }\n      }\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: results,\n        headers,\n        status: context.statusCode\n      });\n    };\n    var respond = respond2;\n    let handlerRequest = new Request(handlerUrl, {\n      headers: request.headers,\n      signal: request.signal\n    });\n    let routesParam = new URL(request.url).searchParams.get(\"_routes\");\n    let loadRouteIds = routesParam ? new Set(routesParam.split(\",\")) : null;\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      filterMatchesToLoad: (m) => !loadRouteIds || loadRouteIds.has(m.route.id),\n      skipLoaderErrorBubbling: true,\n      unstable_respond: respond2\n    });\n    if (!isResponse(result)) {\n      result = respond2(result);\n    }\n    if (isRedirectResponse(result)) {\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n            result.status,\n            result.headers,\n            build.basename\n          )\n        },\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      });\n    }\n    return result;\n  } catch (error) {\n    handleError(error);\n    return generateSingleFetchResponse(request, build, serverMode, {\n      result: { root: { error } },\n      headers: new Headers(),\n      status: 500\n    });\n  }\n}\nfunction generateSingleFetchResponse(request, build, serverMode, {\n  result,\n  headers,\n  status\n}) {\n  let resultHeaders = new Headers(headers);\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\n  if (SERVER_NO_BODY_STATUS_CODES.has(status)) {\n    return new Response(null, { status, headers: resultHeaders });\n  }\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\n  return new Response(\n    encodeViaTurboStream(\n      result,\n      request.signal,\n      build.entry.module.streamTimeout,\n      serverMode\n    ),\n    {\n      status: status || 200,\n      headers: resultHeaders\n    }\n  );\n}\nfunction getSingleFetchRedirect(status, headers, basename) {\n  let redirect2 = headers.get(\"Location\");\n  if (basename) {\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\n  }\n  return {\n    redirect: redirect2,\n    status,\n    revalidate: (\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n      // detail of ?_data requests as our way to tell the front end to revalidate when\n      // we didn't have a response body to include that information in.\n      // With single fetch, we tell the front end via this revalidate boolean field.\n      // However, we're respecting it for now because it may be something folks have\n      // used in their own responses\n      // TODO(v3): Consider removing or making this official public API\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\n    ),\n    reload: headers.has(\"X-Remix-Reload-Document\"),\n    replace: headers.has(\"X-Remix-Replace\")\n  };\n}\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\n  let controller = new AbortController();\n  let timeoutId = setTimeout(\n    () => controller.abort(new Error(\"Server Timeout\")),\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\n  );\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\n  return encode(data2, {\n    signal: controller.signal,\n    plugins: [\n      (value) => {\n        if (value instanceof Error) {\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\n          return [\"SanitizedError\", name, message, stack];\n        }\n        if (value instanceof ErrorResponseImpl) {\n          let { data: data3, status, statusText } = value;\n          return [\"ErrorResponse\", data3, status, statusText];\n        }\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\n        }\n      }\n    ],\n    postPlugins: [\n      (value) => {\n        if (!value) return;\n        if (typeof value !== \"object\") return;\n        return [\n          \"SingleFetchClassInstance\",\n          Object.fromEntries(Object.entries(value))\n        ];\n      },\n      () => [\"SingleFetchFallback\"]\n    ]\n  });\n}\n\n// lib/server-runtime/server.ts\nfunction derive(build, mode) {\n  let routes = createRoutes(build.routes);\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\n  let staticHandler = createStaticHandler(dataRoutes, {\n    basename: build.basename\n  });\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\n      console.error(\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        isRouteErrorResponse(error) && error.error ? error.error : error\n      );\n    }\n  });\n  return {\n    routes,\n    dataRoutes,\n    serverMode,\n    staticHandler,\n    errorHandler\n  };\n}\nvar createRequestHandler = (build, mode) => {\n  let _build;\n  let routes;\n  let serverMode;\n  let staticHandler;\n  let errorHandler;\n  return async function requestHandler(request, initialContext) {\n    _build = typeof build === \"function\" ? await build() : build;\n    if (typeof build === \"function\") {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    }\n    let params = {};\n    let loadContext;\n    let handleError = (error) => {\n      if (mode === \"development\" /* Development */) {\n        getDevServerHooks()?.processRequestError?.(error);\n      }\n      errorHandler(error, {\n        context: loadContext,\n        params,\n        request\n      });\n    };\n    if (_build.future.unstable_middleware) {\n      if (initialContext == null) {\n        loadContext = new unstable_RouterContextProvider();\n      } else {\n        try {\n          loadContext = new unstable_RouterContextProvider(\n            initialContext\n          );\n        } catch (e) {\n          let error = new Error(\n            `Unable to create initial \\`unstable_RouterContextProvider\\` instance. Please confirm you are returning an instance of \\`Map<unstable_routerContext, unknown>\\` from your \\`getLoadContext\\` function.\n\nError: ${e instanceof Error ? e.toString() : e}`\n          );\n          handleError(error);\n          return returnLastResortErrorResponse(error, serverMode);\n        }\n      }\n    } else {\n      loadContext = initialContext || {};\n    }\n    let url = new URL(request.url);\n    let normalizedBasename = _build.basename || \"/\";\n    let normalizedPath = url.pathname;\n    if (stripBasename(normalizedPath, normalizedBasename) === \"/_root.data\") {\n      normalizedPath = normalizedBasename;\n    } else if (normalizedPath.endsWith(\".data\")) {\n      normalizedPath = normalizedPath.replace(/\\.data$/, \"\");\n    }\n    if (stripBasename(normalizedPath, normalizedBasename) !== \"/\" && normalizedPath.endsWith(\"/\")) {\n      normalizedPath = normalizedPath.slice(0, -1);\n    }\n    let isSpaMode = getBuildTimeHeader(request, \"X-React-Router-SPA-Mode\") === \"yes\";\n    if (!_build.ssr) {\n      if (_build.prerender.length === 0) {\n        isSpaMode = true;\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\n        if (url.pathname.endsWith(\".data\")) {\n          errorHandler(\n            new ErrorResponseImpl(\n              404,\n              \"Not Found\",\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\n            ),\n            {\n              context: loadContext,\n              params,\n              request\n            }\n          );\n          return new Response(\"Not Found\", {\n            status: 404,\n            statusText: \"Not Found\"\n          });\n        } else {\n          isSpaMode = true;\n        }\n      }\n    }\n    let manifestUrl = `${normalizedBasename}/__manifest`.replace(/\\/+/g, \"/\");\n    if (url.pathname === manifestUrl) {\n      try {\n        let res = await handleManifestRequest(_build, routes, url);\n        return res;\n      } catch (e) {\n        handleError(e);\n        return new Response(\"Unknown Server Error\", { status: 500 });\n      }\n    }\n    let matches = matchServerRoutes(routes, url.pathname, _build.basename);\n    if (matches && matches.length > 0) {\n      Object.assign(params, matches[0].params);\n    }\n    let response;\n    if (url.pathname.endsWith(\".data\")) {\n      let handlerUrl = new URL(request.url);\n      handlerUrl.pathname = normalizedPath;\n      let singleFetchMatches = matchServerRoutes(\n        routes,\n        handlerUrl.pathname,\n        _build.basename\n      );\n      response = await handleSingleFetchRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        handlerUrl,\n        loadContext,\n        handleError\n      );\n      if (_build.entry.module.handleDataRequest) {\n        response = await _build.entry.module.handleDataRequest(response, {\n          context: loadContext,\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\n          request\n        });\n        if (isRedirectResponse(response)) {\n          let result = getSingleFetchRedirect(\n            response.status,\n            response.headers,\n            _build.basename\n          );\n          if (request.method === \"GET\") {\n            result = {\n              [SingleFetchRedirectSymbol]: result\n            };\n          }\n          let headers = new Headers(response.headers);\n          headers.set(\"Content-Type\", \"text/x-script\");\n          return new Response(\n            encodeViaTurboStream(\n              result,\n              request.signal,\n              _build.entry.module.streamTimeout,\n              serverMode\n            ),\n            {\n              status: SINGLE_FETCH_REDIRECT_STATUS,\n              headers\n            }\n          );\n        }\n      }\n    } else if (!isSpaMode && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\n      response = await handleResourceRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        matches.slice(-1)[0].route.id,\n        request,\n        loadContext,\n        handleError\n      );\n    } else {\n      let { pathname } = url;\n      let criticalCss = void 0;\n      if (_build.unstable_getCriticalCss) {\n        criticalCss = await _build.unstable_getCriticalCss({ pathname });\n      } else if (mode === \"development\" /* Development */ && getDevServerHooks()?.getCriticalCss) {\n        criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);\n      }\n      response = await handleDocumentRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        loadContext,\n        handleError,\n        isSpaMode,\n        criticalCss\n      );\n    }\n    if (request.method === \"HEAD\") {\n      return new Response(null, {\n        headers: response.headers,\n        status: response.status,\n        statusText: response.statusText\n      });\n    }\n    return response;\n  };\n};\nasync function handleManifestRequest(build, routes, url) {\n  if (build.assets.version !== url.searchParams.get(\"version\")) {\n    return new Response(null, {\n      status: 204,\n      headers: {\n        \"X-Remix-Reload-Document\": \"true\"\n      }\n    });\n  }\n  let patches = {};\n  if (url.searchParams.has(\"p\")) {\n    let paths = /* @__PURE__ */ new Set();\n    url.searchParams.getAll(\"p\").forEach((path) => {\n      if (!path.startsWith(\"/\")) {\n        path = `/${path}`;\n      }\n      let segments = path.split(\"/\").slice(1);\n      segments.forEach((_, i) => {\n        let partialPath = segments.slice(0, i + 1).join(\"/\");\n        paths.add(`/${partialPath}`);\n      });\n    });\n    for (let path of paths) {\n      let matches = matchServerRoutes(routes, path, build.basename);\n      if (matches) {\n        for (let match of matches) {\n          let routeId = match.route.id;\n          let route = build.assets.routes[routeId];\n          if (route) {\n            patches[routeId] = route;\n          }\n        }\n      }\n    }\n    return Response.json(patches, {\n      headers: {\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\n      }\n    });\n  }\n  return new Response(\"Invalid Request\", { status: 400 });\n}\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\n  let response = request.method !== \"GET\" ? await singleFetchAction(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  ) : await singleFetchLoaders(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  );\n  return response;\n}\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, isSpaMode, criticalCss) {\n  try {\n    let response = await staticHandler.query(request, {\n      requestContext: loadContext,\n      unstable_respond: build.future.unstable_middleware ? (ctx) => renderHtml(ctx, isSpaMode) : void 0\n    });\n    return isResponse(response) ? response : renderHtml(response, isSpaMode);\n  } catch (error) {\n    handleError(error);\n    return new Response(null, { status: 500 });\n  }\n  async function renderHtml(context, isSpaMode2) {\n    if (isResponse(context)) {\n      return context;\n    }\n    let headers = getDocumentHeaders(build, context);\n    if (SERVER_NO_BODY_STATUS_CODES.has(context.statusCode)) {\n      return new Response(null, { status: context.statusCode, headers });\n    }\n    if (context.errors) {\n      Object.values(context.errors).forEach((err) => {\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let state = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors2(context.errors, serverMode)\n    };\n    let entryContext = {\n      manifest: build.assets,\n      routeModules: createEntryRouteModules(build.routes),\n      staticHandlerContext: context,\n      criticalCss,\n      serverHandoffString: createServerHandoffString({\n        basename: build.basename,\n        criticalCss,\n        future: build.future,\n        ssr: build.ssr,\n        isSpaMode: isSpaMode2\n      }),\n      serverHandoffStream: encodeViaTurboStream(\n        state,\n        request.signal,\n        build.entry.module.streamTimeout,\n        serverMode\n      ),\n      renderMeta: {},\n      future: build.future,\n      ssr: build.ssr,\n      isSpaMode: isSpaMode2,\n      serializeError: (err) => serializeError(err, serverMode)\n    };\n    let handleDocumentRequestFunction = build.entry.module.default;\n    try {\n      return await handleDocumentRequestFunction(\n        request,\n        context.statusCode,\n        headers,\n        entryContext,\n        loadContext\n      );\n    } catch (error) {\n      handleError(error);\n      let errorForSecondRender = error;\n      if (isResponse(error)) {\n        try {\n          let data2 = await unwrapResponse(error);\n          errorForSecondRender = new ErrorResponseImpl(\n            error.status,\n            error.statusText,\n            data2\n          );\n        } catch (e) {\n        }\n      }\n      context = getStaticContextFromError(\n        staticHandler.dataRoutes,\n        context,\n        errorForSecondRender\n      );\n      if (context.errors) {\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let state2 = {\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: serializeErrors2(context.errors, serverMode)\n      };\n      entryContext = {\n        ...entryContext,\n        staticHandlerContext: context,\n        serverHandoffString: createServerHandoffString({\n          basename: build.basename,\n          future: build.future,\n          ssr: build.ssr,\n          isSpaMode: isSpaMode2\n        }),\n        serverHandoffStream: encodeViaTurboStream(\n          state2,\n          request.signal,\n          build.entry.module.streamTimeout,\n          serverMode\n        ),\n        renderMeta: {}\n      };\n      try {\n        return await handleDocumentRequestFunction(\n          request,\n          context.statusCode,\n          headers,\n          entryContext,\n          loadContext\n        );\n      } catch (error2) {\n        handleError(error2);\n        return returnLastResortErrorResponse(error2, serverMode);\n      }\n    }\n  }\n}\nasync function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {\n  try {\n    let response = await staticHandler.queryRoute(request, {\n      routeId,\n      requestContext: loadContext,\n      unstable_respond: build.future.unstable_middleware ? (ctx) => ctx : void 0\n    });\n    if (isResponse(response)) {\n      return response;\n    }\n    if (typeof response === \"string\") {\n      return new Response(response);\n    }\n    return Response.json(response);\n  } catch (error) {\n    if (isResponse(error)) {\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\n      return error;\n    }\n    if (isRouteErrorResponse(error)) {\n      if (error) {\n        handleError(error);\n      }\n      return errorResponseToJson(error, serverMode);\n    }\n    if (error instanceof Error && error.message === \"Expected a response from queryRoute\") {\n      let newError = new Error(\n        \"Expected a Response to be returned from resource route handler\"\n      );\n      handleError(newError);\n      return returnLastResortErrorResponse(newError, serverMode);\n    }\n    handleError(error);\n    return returnLastResortErrorResponse(error, serverMode);\n  }\n}\nfunction errorResponseToJson(errorResponse, serverMode) {\n  return Response.json(\n    serializeError(\n      // @ts-expect-error This is \"private\" from users but intended for internal use\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\n      serverMode\n    ),\n    {\n      status: errorResponse.status,\n      statusText: errorResponse.statusText,\n      headers: {\n        \"X-Remix-Error\": \"yes\"\n      }\n    }\n  );\n}\nfunction returnLastResortErrorResponse(error, serverMode) {\n  let message = \"Unexpected Server Error\";\n  if (serverMode !== \"production\" /* Production */) {\n    message += `\n\n${String(error)}`;\n  }\n  return new Response(message, {\n    status: 500,\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  });\n}\nfunction unwrapResponse(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\n}\n\n// lib/server-runtime/sessions.ts\nfunction flash(name) {\n  return `__flash_${name}__`;\n}\nvar createSession = (initialData = {}, id = \"\") => {\n  let map = new Map(Object.entries(initialData));\n  return {\n    get id() {\n      return id;\n    },\n    get data() {\n      return Object.fromEntries(map);\n    },\n    has(name) {\n      return map.has(name) || map.has(flash(name));\n    },\n    get(name) {\n      if (map.has(name)) return map.get(name);\n      let flashName = flash(name);\n      if (map.has(flashName)) {\n        let value = map.get(flashName);\n        map.delete(flashName);\n        return value;\n      }\n      return void 0;\n    },\n    set(name, value) {\n      map.set(name, value);\n    },\n    flash(name, value) {\n      map.set(flash(name), value);\n    },\n    unset(name) {\n      map.delete(name);\n    }\n  };\n};\nvar isSession = (object) => {\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\n};\nfunction createSessionStorage({\n  cookie: cookieArg,\n  createData,\n  readData,\n  updateData,\n  deleteData\n}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\n      let data2 = id && await readData(id);\n      return createSession(data2 || {}, id || \"\");\n    },\n    async commitSession(session, options) {\n      let { id, data: data2 } = session;\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\n      if (id) {\n        await updateData(id, data2, expires);\n      } else {\n        id = await createData(data2, expires);\n      }\n      return cookie.serialize(id, options);\n    },\n    async destroySession(session, options) {\n      await deleteData(session.id);\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\nfunction warnOnceAboutSigningSessionCookie(cookie) {\n  warnOnce(\n    cookie.isSigned,\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://reactrouter.com/explanation/sessions-and-cookies#signing-cookies for more information.`\n  );\n}\n\n// lib/server-runtime/sessions/cookieStorage.ts\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      return createSession(\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\n      );\n    },\n    async commitSession(session, options) {\n      let serializedCookie = await cookie.serialize(session.data, options);\n      if (serializedCookie.length > 4096) {\n        throw new Error(\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\n        );\n      }\n      return serializedCookie;\n    },\n    async destroySession(_session, options) {\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\n\n// lib/server-runtime/sessions/memoryStorage.ts\nfunction createMemorySessionStorage({ cookie } = {}) {\n  let map = /* @__PURE__ */ new Map();\n  return createSessionStorage({\n    cookie,\n    async createData(data2, expires) {\n      let id = Math.random().toString(36).substring(2, 10);\n      map.set(id, { data: data2, expires });\n      return id;\n    },\n    async readData(id) {\n      if (map.has(id)) {\n        let { data: data2, expires } = map.get(id);\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\n          return data2;\n        }\n        if (expires) map.delete(id);\n      }\n      return null;\n    },\n    async updateData(id, data2, expires) {\n      map.set(id, { data: data2, expires });\n    },\n    async deleteData(id) {\n      map.delete(id);\n    }\n  });\n}\n\n// lib/href.ts\nfunction href(path, ...args) {\n  let params = args[0];\n  return path.split(\"/\").map((segment) => {\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\n    if (!match) return segment;\n    const param = match[1];\n    const value = params ? params[param] : void 0;\n    const isRequired = match[2] === void 0;\n    if (isRequired && value === void 0) {\n      throw Error(\n        `Path '${path}' requires param '${param}' but it was not provided`\n      );\n    }\n    return value;\n  }).filter((segment) => segment !== void 0).join(\"/\");\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors2(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom/ssr/hydration.tsx\nfunction getHydrationData(state, routes, getRouteInfo, location, basename, isSpaMode) {\n  let hydrationData = {\n    ...state,\n    loaderData: { ...state.loaderData }\n  };\n  let initialMatches = matchRoutes(routes, location, basename);\n  if (initialMatches) {\n    for (let match of initialMatches) {\n      let routeId = match.route.id;\n      let routeInfo = getRouteInfo(routeId);\n      if (shouldHydrateRouteLoader(\n        routeId,\n        routeInfo.clientLoader,\n        routeInfo.hasLoader,\n        isSpaMode\n      ) && (routeInfo.hasHydrateFallback || !routeInfo.hasLoader)) {\n        delete hydrationData.loaderData[routeId];\n      } else if (!routeInfo.hasLoader) {\n        hydrationData.loaderData[routeId] = null;\n      }\n    }\n  }\n  return hydrationData;\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  unstable_createContext,\n  unstable_RouterContextProvider,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  DataRouterContext,\n  DataRouterStateContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  createSearchParams,\n  SingleFetchRedirectSymbol,\n  getTurboStreamSingleFetchDataStrategy,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  FrameworkContext,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2 as createStaticHandler,\n  createStaticRouter,\n  ServerRouter,\n  createRoutesStub,\n  createCookie,\n  isCookie,\n  ServerMode,\n  setDevServerHooks,\n  createRequestHandler,\n  createSession,\n  isSession,\n  createSessionStorage,\n  createCookieSessionStorage,\n  createMemorySessionStorage,\n  href,\n  deserializeErrors2 as deserializeErrors,\n  getHydrationData\n};\n","/**\n * react-router v7.5.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  FrameworkContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createRouter,\n  decodeViaTurboStream,\n  deserializeErrors,\n  getHydrationData,\n  getPatchRoutesOnNavigationFunction,\n  getTurboStreamSingleFetchDataStrategy,\n  hydrationRouteProperties,\n  invariant,\n  mapRouteProperties,\n  useFogOFWarDiscovery\n} from \"./chunk-BAXFHI7N.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(\n            importMap.textContent\n          ).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  unstable_getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (ssrInfo.context.isSpaMode) {\n    let { loaderData } = ssrInfo.context.state;\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData(\n      ssrInfo.context.state,\n      routes,\n      (routeId) => ({\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n      }),\n      window.location,\n      window.__reactRouterContext?.basename,\n      ssrInfo.context.isSpaMode\n    );\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(\n      () => router2,\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.basename\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          ssr: ssrInfo.context.ssr,\n          isSpaMode: ssrInfo.context.isSpaMode\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider\n};\n","/**\n * react-router v7.5.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  Action,\n  Await,\n  BrowserRouter,\n  DataRouterContext,\n  DataRouterStateContext,\n  ErrorResponseImpl,\n  FetchersContext,\n  Form,\n  FrameworkContext,\n  HashRouter,\n  HistoryRouter,\n  IDLE_BLOCKER,\n  IDLE_FETCHER,\n  IDLE_NAVIGATION,\n  Link,\n  Links,\n  LocationContext,\n  MemoryRouter,\n  Meta,\n  NavLink,\n  Navigate,\n  NavigationContext,\n  Outlet,\n  PrefetchPageLinks,\n  RemixErrorBoundary,\n  Route,\n  RouteContext,\n  Router,\n  RouterProvider,\n  Routes,\n  Scripts,\n  ScrollRestoration,\n  ServerMode,\n  ServerRouter,\n  SingleFetchRedirectSymbol,\n  StaticRouter,\n  StaticRouterProvider,\n  ViewTransitionContext,\n  createBrowserHistory,\n  createBrowserRouter,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createCookie,\n  createCookieSessionStorage,\n  createHashRouter,\n  createMemoryRouter,\n  createMemorySessionStorage,\n  createPath,\n  createRequestHandler,\n  createRouter,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  createRoutesStub,\n  createSearchParams,\n  createSession,\n  createSessionStorage,\n  createStaticHandler,\n  createStaticRouter,\n  data,\n  decodeViaTurboStream,\n  deserializeErrors,\n  generatePath,\n  getHydrationData,\n  getPatchRoutesOnNavigationFunction,\n  getTurboStreamSingleFetchDataStrategy,\n  href,\n  hydrationRouteProperties,\n  invariant,\n  isCookie,\n  isRouteErrorResponse,\n  isSession,\n  mapRouteProperties,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  replace,\n  resolvePath,\n  setDevServerHooks,\n  shouldHydrateRouteLoader,\n  unstable_RouterContextProvider,\n  unstable_createContext,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBeforeUnload,\n  useBlocker,\n  useFetcher,\n  useFetchers,\n  useFogOFWarDiscovery,\n  useFormAction,\n  useHref,\n  useInRouterContext,\n  useLinkClickHandler,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  usePrompt,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n  useScrollRestoration,\n  useSearchParams,\n  useSubmit,\n  useViewTransitionState\n} from \"./chunk-BAXFHI7N.mjs\";\nexport {\n  Await,\n  BrowserRouter,\n  Form,\n  HashRouter,\n  IDLE_BLOCKER,\n  IDLE_FETCHER,\n  IDLE_NAVIGATION,\n  Link,\n  Links,\n  MemoryRouter,\n  Meta,\n  NavLink,\n  Navigate,\n  Action as NavigationType,\n  Outlet,\n  PrefetchPageLinks,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  Scripts,\n  ScrollRestoration,\n  ServerRouter,\n  StaticRouter,\n  StaticRouterProvider,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  ErrorResponseImpl as UNSAFE_ErrorResponseImpl,\n  FetchersContext as UNSAFE_FetchersContext,\n  FrameworkContext as UNSAFE_FrameworkContext,\n  LocationContext as UNSAFE_LocationContext,\n  NavigationContext as UNSAFE_NavigationContext,\n  RemixErrorBoundary as UNSAFE_RemixErrorBoundary,\n  RouteContext as UNSAFE_RouteContext,\n  ServerMode as UNSAFE_ServerMode,\n  SingleFetchRedirectSymbol as UNSAFE_SingleFetchRedirectSymbol,\n  ViewTransitionContext as UNSAFE_ViewTransitionContext,\n  createBrowserHistory as UNSAFE_createBrowserHistory,\n  createClientRoutes as UNSAFE_createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut as UNSAFE_createClientRoutesWithHMRRevalidationOptOut,\n  createRouter as UNSAFE_createRouter,\n  decodeViaTurboStream as UNSAFE_decodeViaTurboStream,\n  deserializeErrors as UNSAFE_deserializeErrors,\n  getHydrationData as UNSAFE_getHydrationData,\n  getPatchRoutesOnNavigationFunction as UNSAFE_getPatchRoutesOnNavigationFunction,\n  getTurboStreamSingleFetchDataStrategy as UNSAFE_getTurboStreamSingleFetchDataStrategy,\n  hydrationRouteProperties as UNSAFE_hydrationRouteProperties,\n  invariant as UNSAFE_invariant,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  shouldHydrateRouteLoader as UNSAFE_shouldHydrateRouteLoader,\n  useFogOFWarDiscovery as UNSAFE_useFogOFWarDiscovery,\n  useScrollRestoration as UNSAFE_useScrollRestoration,\n  createBrowserRouter,\n  createCookie,\n  createCookieSessionStorage,\n  createHashRouter,\n  createMemoryRouter,\n  createMemorySessionStorage,\n  createPath,\n  createRequestHandler,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  createRoutesStub,\n  createSearchParams,\n  createSession,\n  createSessionStorage,\n  createStaticHandler,\n  createStaticRouter,\n  data,\n  generatePath,\n  href,\n  isCookie,\n  isRouteErrorResponse,\n  isSession,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  replace,\n  resolvePath,\n  HistoryRouter as unstable_HistoryRouter,\n  unstable_RouterContextProvider,\n  unstable_createContext,\n  setDevServerHooks as unstable_setDevServerHooks,\n  usePrompt as unstable_usePrompt,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBeforeUnload,\n  useBlocker,\n  useFetcher,\n  useFetchers,\n  useFormAction,\n  useHref,\n  useInRouterContext,\n  useLinkClickHandler,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n  useSearchParams,\n  useSubmit,\n  useViewTransitionState\n};\n","/**\n * react-router-dom v7.5.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n// index.ts\nimport { HydratedRouter, RouterProvider } from \"react-router/dom\";\nexport * from \"react-router\";\nexport {\n  HydratedRouter,\n  RouterProvider\n};\n"],"names":["Deferred","setCookieModule","React.createContext","React2.useContext","React2.useMemo","React2.useLayoutEffect","React2.useRef","React2.useCallback","React2.createContext","React2.createElement","React2.Fragment","React2.Component","React2.useState","React2.useEffect","React3.createElement","React3.useState","React3.useRef","React3.useCallback","React3.startTransition","React3.useLayoutEffect","React3.useEffect","React3.useMemo","React3.Fragment","React3.memo","React3.useContext","React3.Component","React3.Children","React3.isValidElement","React4.createElement","React4.Fragment","React4.Suspense","React5.Component","React5.createElement","React6.createElement","React7.createElement","React8.useEffect","React9.useContext","React9.createContext","React9.useState","React9.useRef","React9.useEffect","React9.useMemo","React9.createElement","React9.Fragment","React10.useRef","React10.useState","React10.useCallback","React10.startTransition","React10.useLayoutEffect","React10.createElement","React10.forwardRef","React10.useContext","React10.Fragment","React10.useMemo","React10.useId","React10.useEffect","React11.createElement","React11.Fragment","React12.createElement","React12.Fragment","React12.Suspense","React13.useRef","React13.createElement","parse","serialize","splitCookiesString","React.createElement","ReactDOM.flushSync","deserializeErrors"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}